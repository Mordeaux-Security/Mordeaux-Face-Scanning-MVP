openapi: 3.0.3
info:
  title: Face Processing Pipeline API
  description: |
    Stable API v0.1 for face detection, embedding, and similarity search.
    
    ## Features
    - Face similarity search by image or vector
    - Face metadata retrieval
    - Pipeline statistics
    - Health monitoring
    
    ## Authentication
    All endpoints require `X-Tenant-ID` header for multi-tenant isolation.
    
    ## Version
    This is API version v0.1 - contract is frozen and stable.
  version: "0.1.0"
  contact:
    name: Mordeaux Face Scanning MVP
  license:
    name: MIT
servers:
  - url: http://localhost:8000
    description: Development server
  - url: https://api.mordeaux.com
    description: Production server

paths:
  /api/v1/search:
    post:
      tags:
        - search
      summary: Search for similar faces
      description: |
        Search for similar faces using either:
        1. Image upload (multipart/form-data)
        2. Pre-computed embedding vector (JSON)
        
        Returns presigned thumbnail URLs with 10-minute TTL.
      operationId: search_faces
      parameters:
        - name: X-Tenant-ID
          in: header
          required: true
          schema:
            type: string
            example: "tenant-123"
          description: Tenant identifier for data isolation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
            examples:
              vector_search:
                summary: Search by embedding vector
                value:
                  vector: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
                  tenant_id: "tenant-123"
                  top_k: 10
                  threshold: 0.75
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: Image file for face detection
                tenant_id:
                  type: string
                  example: "tenant-123"
                top_k:
                  type: integer
                  default: 10
                  minimum: 1
                  maximum: 50
                threshold:
                  type: number
                  default: 0.75
                  minimum: 0.0
                  maximum: 1.0
            examples:
              image_search:
                summary: Search by image upload
                value:
                  image: "binary-image-data"
                  tenant_id: "tenant-123"
                  top_k: 10
                  threshold: 0.75
      responses:
        '200':
          description: Search completed successfully
          headers:
            X-API-Version:
              description: API version
              schema:
                type: string
                example: "v0.1"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
              examples:
                successful_search:
                  summary: Successful face search
                  value:
                    query:
                      tenant_id: "tenant-123"
                      search_mode: "image"
                      top_k: 10
                      threshold: 0.75
                    hits:
                      - face_id: "face-uuid-123"
                        score: 0.95
                        payload:
                          site: "example.com"
                          url: "https://example.com/image.jpg"
                          ts: "2024-01-01T12:00:00Z"
                          bbox: [100, 150, 200, 250]
                          p_hash: "b2c3d4e5f6g7h8i9"
                          quality: 0.92
                        thumb_url: "https://minio.example.com/thumbnails/tenant123/def456_thumb.jpg?X-Amz-Algorithm=..."
                    count: 1
        '400':
          description: Bad request - invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/faces/{face_id}:
    get:
      tags:
        - faces
      summary: Get face details by ID
      description: |
        Retrieve detailed information about a specific face.
        Returns filtered metadata with presigned thumbnail URL.
      operationId: get_face_by_id
      parameters:
        - name: X-Tenant-ID
          in: header
          required: true
          schema:
            type: string
            example: "tenant-123"
          description: Tenant identifier for data isolation
        - name: face_id
          in: path
          required: true
          schema:
            type: string
            example: "face-uuid-123"
          description: Unique face identifier
      responses:
        '200':
          description: Face details retrieved successfully
          headers:
            X-API-Version:
              description: API version
              schema:
                type: string
                example: "v0.1"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FaceDetailResponse'
              examples:
                face_details:
                  summary: Face details response
                  value:
                    face_id: "face-uuid-123"
                    payload:
                      site: "example.com"
                      url: "https://example.com/image.jpg"
                      ts: "2024-01-01T12:00:00Z"
                      bbox: [100, 150, 200, 250]
                      p_hash: "b2c3d4e5f6g7h8i9"
                      quality: 0.92
                    thumb_url: "https://minio.example.com/thumbnails/tenant123/def456_thumb.jpg?X-Amz-Algorithm=..."
        '404':
          description: Face not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/stats:
    get:
      tags:
        - statistics
      summary: Get pipeline statistics
      description: |
        Retrieve processing statistics for the face pipeline.
        Includes counts of processed, rejected, and duplicate-skipped faces.
      operationId: get_pipeline_stats
      parameters:
        - name: X-Tenant-ID
          in: header
          required: true
          schema:
            type: string
            example: "tenant-123"
          description: Tenant identifier for data isolation
      responses:
        '200':
          description: Statistics retrieved successfully
          headers:
            X-API-Version:
              description: API version
              schema:
                type: string
                example: "v0.1"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsResponse'
              examples:
                pipeline_stats:
                  summary: Pipeline statistics
                  value:
                    processed: 1250
                    rejected: 45
                    dup_skipped: 12
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/health:
    get:
      tags:
        - health
      summary: API health check
      description: |
        Check the health status of the face processing pipeline API.
        Returns basic service health without dependency checks.
      operationId: get_health
      responses:
        '200':
          description: Service is healthy
          headers:
            X-API-Version:
              description: API version
              schema:
                type: string
                example: "v0.1"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
              examples:
                healthy_service:
                  summary: Healthy service response
                  value:
                    status: "healthy"
                    service: "face-pipeline-search-api"
                    version: "0.1.0-dev2"
                    api_version: "v0.1"
                    note: "API v0.1 contract frozen - all endpoints stable"

components:
  schemas:
    SearchRequest:
      type: object
      required:
        - tenant_id
      properties:
        image:
          type: string
          format: binary
          description: Image bytes for face detection and embedding generation
        vector:
          type: array
          items:
            type: number
          description: Pre-computed 512-dimension face embedding vector
          example: [0.1, 0.2, 0.3, 0.4, 0.5]
        tenant_id:
          type: string
          description: Tenant identifier for data isolation
          example: "tenant-123"
        top_k:
          type: integer
          default: 10
          minimum: 1
          maximum: 50
          description: Maximum number of similar faces to return
        threshold:
          type: number
          default: 0.75
          minimum: 0.0
          maximum: 1.0
          description: Minimum similarity score threshold (0.0-1.0)
      description: Request model for face similarity search

    SearchResponse:
      type: object
      required:
        - query
        - hits
        - count
      properties:
        query:
          type: object
          required:
            - tenant_id
            - search_mode
            - top_k
            - threshold
          properties:
            tenant_id:
              type: string
              example: "tenant-123"
            search_mode:
              type: string
              enum: [image, vector]
              example: "image"
            top_k:
              type: integer
              example: 10
            threshold:
              type: number
              example: 0.75
        hits:
          type: array
          items:
            $ref: '#/components/schemas/SearchHit'
        count:
          type: integer
          description: Number of hits returned
          example: 1

    SearchHit:
      type: object
      required:
        - face_id
        - score
        - payload
        - thumb_url
      properties:
        face_id:
          type: string
          description: Unique face identifier
          example: "face-uuid-123"
        score:
          type: number
          minimum: 0.0
          maximum: 1.0
          description: Similarity score (cosine similarity, 0-1)
          example: 0.95
        payload:
          type: object
          description: Filtered face metadata (only allowed fields)
          properties:
            site:
              type: string
              example: "example.com"
            url:
              type: string
              example: "https://example.com/image.jpg"
            ts:
              type: string
              format: date-time
              example: "2024-01-01T12:00:00Z"
            bbox:
              type: array
              items:
                type: integer
              minItems: 4
              maxItems: 4
              description: Face bounding box [x, y, width, height]
              example: [100, 150, 200, 250]
            p_hash:
              type: string
              description: Perceptual hash of the image
              example: "b2c3d4e5f6g7h8i9"
            quality:
              type: number
              minimum: 0.0
              maximum: 1.0
              description: Image quality score
              example: 0.92
        thumb_url:
          type: string
          nullable: true
          description: Presigned URL for face thumbnail (TTL: 10 minutes max, 256px longest side)
          example: "https://minio.example.com/thumbnails/tenant123/def456_thumb.jpg?X-Amz-Algorithm=..."

    FaceDetailResponse:
      type: object
      required:
        - face_id
        - payload
        - thumb_url
      properties:
        face_id:
          type: string
          description: Unique face identifier
          example: "face-uuid-123"
        payload:
          type: object
          description: Filtered face metadata (only allowed fields)
          properties:
            site:
              type: string
              example: "example.com"
            url:
              type: string
              example: "https://example.com/image.jpg"
            ts:
              type: string
              format: date-time
              example: "2024-01-01T12:00:00Z"
            bbox:
              type: array
              items:
                type: integer
              minItems: 4
              maxItems: 4
              description: Face bounding box [x, y, width, height]
              example: [100, 150, 200, 250]
            p_hash:
              type: string
              description: Perceptual hash of the image
              example: "b2c3d4e5f6g7h8i9"
            quality:
              type: number
              minimum: 0.0
              maximum: 1.0
              description: Image quality score
              example: 0.92
        thumb_url:
          type: string
          nullable: true
          description: Presigned URL for face thumbnail (TTL: 10 minutes max, 256px longest side)
          example: "https://minio.example.com/thumbnails/tenant123/def456_thumb.jpg?X-Amz-Algorithm=..."

    StatsResponse:
      type: object
      required:
        - processed
        - rejected
        - dup_skipped
      properties:
        processed:
          type: integer
          description: Total faces processed successfully
          example: 1250
        rejected:
          type: integer
          description: Total faces rejected (quality, size, etc.)
          example: 45
        dup_skipped:
          type: integer
          description: Total faces skipped as duplicates
          example: 12

    HealthResponse:
      type: object
      required:
        - status
        - service
        - version
        - api_version
        - note
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
          example: "healthy"
        service:
          type: string
          example: "face-pipeline-search-api"
        version:
          type: string
          example: "0.1.0-dev2"
        api_version:
          type: string
          example: "v0.1"
        note:
          type: string
          example: "API v0.1 contract frozen - all endpoints stable"

    ErrorResponse:
      type: object
      required:
        - error
        - message
        - timestamp
      properties:
        error:
          type: string
          description: Error code
          example: "VALIDATION_ERROR"
        message:
          type: string
          description: Human-readable error message
          example: "Invalid request parameters"
        timestamp:
          type: string
          format: date-time
          description: When the error occurred
          example: "2024-01-01T12:00:00Z"
        details:
          type: object
          description: Additional error details
          example: {"field": "threshold", "issue": "must be between 0.0 and 1.0"}

  securitySchemes:
    TenantAuth:
      type: apiKey
      in: header
      name: X-Tenant-ID
      description: Tenant identifier for multi-tenant isolation

security:
  - TenantAuth: []
